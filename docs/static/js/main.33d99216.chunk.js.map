{"version":3,"sources":["components/CategoryAdd.js","helpers/getGifs.js","components/GridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["CategoryAdd","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBADf,IAD2B,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OACI,uBAAMC,SAXY,SAACC,GACnBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAMlB,UACE,6BAAMD,IACN,uBAAOQ,KAAK,OACNC,MAAUT,EACVU,SApBe,SAACP,GAExBF,EAAcE,EAAEQ,OAAOF,c,uBCVlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACoCC,UAAWH,GAD/C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EACtB,MAAO,CAAKC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARnC,kBAYZM,GAZY,4CAAH,sDCEPO,EAAW,SAAC,GAAa,IAAXL,EAAU,EAAVA,IAEvB,OACI,sBAAKM,UAAU,yCAAf,UACQ,qBAAKC,IAAKP,EAAIR,IAAKgB,IAAKR,EAAIE,QAC5B,4BAAIF,EAAIE,YCyBTO,EA1BC,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAAgB,ECDR,SAAEA,GAAe,IAAD,EAEdd,mBACtB,CACIqB,KAAK,GACLa,SAAS,IALuB,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAyBxC,OAhBAC,qBAAW,WAEPxB,EAAQC,GAAUwB,MAAM,SAAAC,GAEpBC,YAAW,WAEPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAGd,UAER,CAACpB,IAGGqB,EDrB0BM,CAAc3B,GAAjCa,EAHkB,EAGxBN,KAAca,EAHU,EAGVA,QAStB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAoDhB,IAClDoB,GAAW,mBAAGJ,UAAU,oCAAb,2BACb,qBAAKA,UAAU,YAAf,SACMH,EAAOJ,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,CAAuBA,IAAKA,GAAbA,EAAIC,aEnB1BiB,EAAe,WAExB,IAF8B,EAGM1C,mBADf,CAAC,WAFQ,mBAGvB2C,EAHuB,KAGX5C,EAHW,KAY9B,OACI,qCACE,8CACA,cAAE,EAAF,CAAcA,cAAkBA,IAChC,uBAEA,6BACM4C,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAAwBA,SAAYA,GAAtBA,Y,MCnBhC8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.33d99216.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n// setCategories es la funcion del componente padre\r\n// la recibimos por medio de las PropTypes y la desestrucramos usando {}\r\nexport const CategoryAdd = ( { setCategories } ) => {\r\n    const initialState = \"\";\r\n    const [inputValue, setInputValue] = useState(initialState);\r\n\r\n    const inputChangeHandler = (e) =>{\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault();        \r\n        \r\n        if (inputValue.trim().length>0){\r\n            setCategories( cats => [inputValue,...cats ]);\r\n            setInputValue(\"\");\r\n            // console.log(\"Enviado\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { submitHandler }>\r\n          <h2>{ inputValue }</h2>\r\n          <input type=\"text\"\r\n                value = { inputValue }\r\n                onChange = { inputChangeHandler }\r\n          ></input>  \r\n        </form>\r\n    )\r\n}\r\n\r\n// En esta seccion usamos los PropTypes para hacer requerida \r\n// la funcion setCategories del componente padre\r\nCategoryAdd.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category)}&limit=10&api_key=dFUnuaW5WONUVaa2IwH7aywLEw4mKLh4`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n            return {    id: img.id,\r\n                        title: img.title,\r\n                        url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n\r\n    return gifs;\r\n    // console.log(gifs);\r\n    // setImages(gifs);\r\n}\r\n","import React from 'react'\r\n\r\nexport const GridItem = ( {img} ) => {\r\n    // console.log(img);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n                <img src={img.url} alt={img.title}></img>\r\n                <p>{img.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","// import React, { useEffect, useState } from 'react'\r\nimport React, { createRef } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { GridItem } from './GridItem';\r\n\r\nconst GifGrid = ( { category } ) => {\r\n\r\n    // console.log(category);\r\n    const { data: images, loading} = useFetchGifs( category );\r\n\r\n    // console.log( images, loading);\r\n\r\n    // const [images, setImages] = useState([]);\r\n    // useEffect( () => {\r\n    //     getGifs(category).then( setImages )\r\n    // }, [category])\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n            { loading && <p className=\" animate__animated animate__flash\">'Cargando...'</p> }\r\n            <div className=\"card-grid\">\r\n                { images.map( img => (\r\n                    <GridItem key={img.id} img={img} />\r\n                )) \r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","// Custom hook\r\nimport { useState, useEffect } from \"react\";\r\n\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState(\r\n        {\r\n            data:[],\r\n            loading: true\r\n        }\r\n    );\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs(category).then( imgs => {\r\n\r\n            setTimeout(() => {\r\n                // console.log(imgs);             \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false                    \r\n                });\r\n\r\n            }, 1000);\r\n        })\r\n    }, [category])\r\n    \r\n\r\n    return state; // { data:[], loading: true }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { CategoryAdd } from \"./components/CategoryAdd\";\r\nimport GifGrid from \"./components/GifGrid\";\r\n\r\n// Usar snipped rafc para crear el esquleto del compnente\r\nexport const GifExpertApp = () => {\r\n\r\n    const initialState = ['batman'];\r\n    const [categories, setCategories] = useState(initialState);\r\n    \r\n    // const handleAdd = () =>{\r\n    //     // categories.push('Wonder Woman');\r\n    //     let newItem = 'Wonder Woman';\r\n    //     // setCategories([...categories, newItem]);\r\n    //     setCategories( cats => [...cats, newItem ]);\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n          <h2>GifExpertApp</h2>\r\n          < CategoryAdd setCategories = { setCategories } />\r\n          <hr/>  \r\n          {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n          <ol>\r\n              { categories.map( category => (\r\n                  <GifGrid key={category} category = {category} />\r\n                )) \r\n              }\r\n          </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GifExpertApp } from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n    <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}